{"version":3,"file":"index.js","sources":["../../node_modules/decamelize/index.js","../../node_modules/humanize-string/index.js","../../src/index.js"],"sourcesContent":["'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","'use strict';\nvar decamelize = require('decamelize');\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tstr = decamelize(str);\n\tstr = str.toLowerCase().replace(/[_-]+/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n\tstr = str.charAt(0).toUpperCase() + str.slice(1);\n\n\treturn str;\n};\n","/**\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * This script exports a HOC that accepts a routes array of objects\n * and an options object.\n *\n * API:\n *\n * withBreadcrumbs(\n *   routes?: Array<Route>,\n *   options? Object<Options>,\n * ): HigherOrderComponent\n *\n * More Info:\n *\n * https://github.com/icd2k3/react-router-breadcrumbs-hoc\n *\n */\n\nimport { createElement } from 'react';\nimport { matchPath, withRouter } from 'react-router';\nimport humanizeString from 'humanize-string';\n\nconst DEFAULT_MATCH_OPTIONS = { exact: true };\nconst NO_BREADCRUMB = 'NO_BREADCRUMB';\n\n/**\n * Renders and returns the breadcrumb complete\n * with `match`, `location`, and `key` props.\n */\nconst render = ({\n  /**\n   * extracting `component` here to avoid an invalid attribute warning\n   * see: https://github.com/icd2k3/react-router-breadcrumbs-hoc/issues/59\n   * This is actually a symptom of a larger issue with this current\n   * functionality of passing route data (needed for breadcrumb rendering)\n   * as props on the component itself. This has the unintended side-effect\n   * of rendering those props as element attributes in the DOM.\n   * TODO: Refactor this render logic (and probably the API) to not render\n   * those props as attributes on the breadcrumb element.\n   */\n  component,\n\n  breadcrumb,\n  match,\n  location,\n  ...rest\n}) => {\n  const componentProps = { match, location, key: match.url, ...rest };\n  if (typeof breadcrumb === 'function') {\n    return createElement(breadcrumb, componentProps);\n  }\n  return createElement('span', componentProps, breadcrumb);\n};\n\n\n/**\n * Small helper method to get a default `humanize-string`\n * breadcrumb if the user hasn't provided one.\n*/\nconst getDefaultBreadcrumb = ({ pathSection, currentSection, location }) => {\n  const match = matchPath(pathSection, { ...DEFAULT_MATCH_OPTIONS, path: pathSection });\n\n  return render({\n    breadcrumb: humanizeString(currentSection),\n    match,\n    location,\n  });\n};\n\n/**\n * Loops through the route array (if provided) and returns either a\n * user-provided breadcrumb OR a sensible default (if enabled) via `humanize-string`.\n*/\nconst getBreadcrumb = ({\n  currentSection,\n  disableDefaults,\n  excludePaths,\n  location,\n  pathSection,\n  routes,\n}) => {\n  let breadcrumb;\n\n  // Check the optional `exludePaths` option in `options` to see if the\n  // current path should not include a breadcrumb.\n  if (excludePaths && excludePaths.includes(pathSection)) {\n    return NO_BREADCRUMB;\n  }\n\n  // Loop through the route array and see if the user has provided a custom breadcrumb.\n  routes.some(({ breadcrumb: userProvidedBreadcrumb, matchOptions, path, ...rest }) => {\n    if (!path) {\n      throw new Error('withBreadcrumbs: `path` must be provided in every route object');\n    }\n\n    const match = matchPath(pathSection, { ...(matchOptions || DEFAULT_MATCH_OPTIONS), path });\n\n    // If user passed breadcrumb: null OR custom match options to suppress a breadcrumb\n    // we need to know NOT to add it to the matches array\n    // see: `if (breadcrumb !== NO_BREADCRUMB)` below.\n    if ((match && userProvidedBreadcrumb === null) || (!match && matchOptions)) {\n      breadcrumb = NO_BREADCRUMB;\n      return true;\n    }\n\n    if (match) {\n      // This covers the case where a user may be extending their react-router route\n      // config with breadcrumbs, but also does not want default breadcrumbs to be\n      // automatically generated (opt-in).\n      if (!userProvidedBreadcrumb && disableDefaults) {\n        breadcrumb = NO_BREADCRUMB;\n        return true;\n      }\n\n      breadcrumb = render({\n        // Although we have a match, the user may be passing their react-router config object\n        // which we support. The route config object may not have a `breadcrumb` param specified.\n        // If this is the case, we should provide a default via `humanizeString`.\n        breadcrumb: userProvidedBreadcrumb || humanizeString(currentSection),\n        match,\n        location,\n        ...rest,\n      });\n      return true;\n    }\n    return false;\n  });\n\n  // User provided a breadcrumb prop, or we generated one via `humanize-string` above.\n  if (breadcrumb) {\n    return breadcrumb;\n  }\n\n  // If there was no breadcrumb provided and user has disableDefaults turned on.\n  if (disableDefaults) {\n    return NO_BREADCRUMB;\n  }\n\n  // If the above conditionals don't fire, generate a default breadcrumb based on the path.\n  return getDefaultBreadcrumb({\n    pathSection,\n    // include a \"Home\" breadcrumb by default (can be overrode or disabled in config).\n    currentSection: pathSection === '/' ? 'Home' : currentSection,\n    location,\n  });\n};\n\n/**\n * Splits the pathname into sections, then search for matches in the routes\n * a user-provided breadcrumb OR a sensible default via `humanize-string`.\n*/\nexport const getBreadcrumbs = ({ routes, location, options = {} }) => {\n  const matches = [];\n  const { pathname } = location;\n\n  pathname\n    .split('?')[0]\n    // Remove trailing slash \"/\" from pathname.\n    .replace(/\\/$/, '')\n    // Split pathname into sections.\n    .split('/')\n    // Reduce over the sections and call `getBreadcrumb()` for each section.\n    .reduce((previousSection, currentSection) => {\n      // Combine the last route section with the currentSection.\n      // For example, `pathname = /1/2/3` results in match checks for\n      // `/1`, `/1/2`, `/1/2/3`.\n      const pathSection = !currentSection ? '/' : `${previousSection}/${currentSection}`;\n\n      const breadcrumb = getBreadcrumb({\n        currentSection,\n        location,\n        pathSection,\n        routes,\n        ...options,\n      });\n\n      // Add the breadcrumb to the matches array\n      // unless the user has explicitly passed.\n      // { path: x, breadcrumb: null } to disable.\n      if (breadcrumb !== NO_BREADCRUMB) {\n        matches.push(breadcrumb);\n      }\n\n      return pathSection === '/' ? '' : pathSection;\n    }, null);\n\n  return matches;\n};\n\n/**\n * Takes a route array and recursively flattens it IF there are\n * nested routes in the config.\n*/\nconst flattenRoutes = routes => routes.reduce((arr, route) => {\n  if (route.routes) {\n    return arr.concat([route, ...flattenRoutes(route.routes)]);\n  }\n  return arr.concat(route);\n}, []);\n\nexport default (routes = [], options) => Component => withRouter(props => createElement(Component, {\n  ...props,\n  breadcrumbs: getBreadcrumbs({\n    routes: flattenRoutes(routes),\n    location: props.location,\n    options,\n  }),\n}));\n"],"names":["DEFAULT_MATCH_OPTIONS","exact","NO_BREADCRUMB","render","component","breadcrumb","match","location","rest","componentProps","key","url","createElement","getDefaultBreadcrumb","pathSection","currentSection","matchPath","path","humanizeString","getBreadcrumb","disableDefaults","excludePaths","routes","includes","some","userProvidedBreadcrumb","matchOptions","Error","getBreadcrumbs","options","matches","pathname","split","replace","reduce","previousSection","push","flattenRoutes","arr","route","concat","Component","withRouter","props","breadcrumbs"],"mappings":"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"}